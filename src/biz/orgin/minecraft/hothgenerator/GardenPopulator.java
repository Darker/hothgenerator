package biz.orgin.minecraft.hothgenerator;

import java.util.Random;

import org.bukkit.Chunk;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.generator.BlockPopulator;

public class GardenPopulator extends BlockPopulator
{
	public GardenPopulator()
	{
	
	}
	
	// -1 = ignore
	
	// 2 = grass
	// 3 = dirt
	// 8 = water
	// 18 = leaves
	// 31 = tall grass
	// 37 = yellow flower
	// 38 = red flowe
	// 89 = glowstone
	// 83 = sugarcane

	int[][][] garden_green = new int[][][] {
			{  // Floor 0
				{-1,-1,-1,-1,-1,-1,-1,-1,-1},
				{-1,-1,-1, 2, 2, 2,-1,-1,-1},
				{-1,-1, 2, 2, 2, 2, 2,-1,-1},
				{-1, 2, 2, 2, 2, 2, 2, 2,-1},
				{-1, 2, 2, 2, 2, 2, 2, 8,-1},
				{-1, 2, 2, 2, 2, 2, 2, 2,-1},
				{-1,-1, 2, 2, 2, 2, 2,-1,-1},
				{-1,-1,-1, 2, 2, 2,-1,-1,-1},
				{-1,-1,-1,-1,-1,-1,-1,-1,-1}
			},
			{  // Floor 1
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1, 3,31, 0, 0, 3,-1,-1},
				{-1, 3,31,31, 0,37, 0, 3,-1},
				{ 3,31,31,31,31, 0, 0,37, 3},
				{ 3,31,31,31,89,31,83, 0, 3},
				{ 3,31,31, 0,31, 0,38, 0, 3},
				{-1, 3, 0,17, 0, 0, 0, 3,-1},
				{-1,-1, 3, 0,38, 0, 3,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1}
			},
			{  // Floor 2
				{ 0, 0, 3, 3, 3, 3, 3, 0, 0},
				{ 0, 3, 0, 0, 0, 0, 0, 3, 0},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0,18,18,18, 0, 0, 0, 3},
				{ 3, 0,18,17,18, 0, 0, 0, 3},
				{ 0, 3,18,18,18, 0, 0, 3, 0},
				{ 0, 0, 3, 3, 3, 3, 3, 0, 0}
			},
			{  // Floor 3
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1, 3, 0, 0, 0, 3,-1,-1},
				{-1, 3, 0, 0, 0, 0, 0, 3,-1},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 3,106,0, 0, 3},
				{ 3, 0, 0,18, 0, 0, 0, 0, 3},
				{-1, 3,18,18,18, 0, 0, 3,-1},
				{-1,-1, 3,18, 0, 0, 3,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1}
			},
			{  // Floor 4
				{-1,-1,-1,-1,-1,-1,-1,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1,-1,-1,-1,-1,-1,-1,-1}
			}
		};

	int[][][] garden_grey = new int[][][] {
			{  // Floor 0
				{-1,-1,-1,-1,-1,-1,-1,-1,-1},
				{-1,-1,-1,110,110,110,-1,-1,-1},
				{-1,-1,110,110,110,110,110,-1,-1},
				{-1,110,110,110,110,110,110,110,-1},
				{-1,110,110,110,110,110,110,110,-1},
				{-1,110,110,110,110,110,110,110,-1},
				{-1,-1,110,110,110,110,110,-1,-1},
				{-1,-1,-1,110,110,110,-1,-1,-1},
				{-1,-1,-1,-1,-1,-1,-1,-1,-1}
			},
			{  // Floor 1
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1, 3, 0, 0,40, 3,-1,-1},
				{-1, 3, 0,39, 0, 0, 0, 3,-1},
				{ 3, 0, 0, 0, 0, 0,39, 0, 3},
				{ 3,40, 0, 0, 0,40, 0, 0, 3},
				{ 3, 0, 0,39, 0, 0, 0, 0, 3},
				{-1, 3, 0, 0, 0, 0,39, 3,-1},
				{-1,-1, 3,40, 0, 0, 3,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1}
			},
			{  // Floor 2
				{ 0, 0, 3, 3, 3, 3, 3, 0, 0},
				{ 0, 3, 0, 0, 0, 0, 0, 3, 0},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 0, 3, 0, 0, 0, 0, 0, 3, 0},
				{ 0, 0, 3, 3, 3, 3, 3, 0, 0}
			},
			{  // Floor 3
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1, 3, 0, 0, 0, 3,-1,-1},
				{-1, 3, 0, 0, 0, 0, 0, 3,-1},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{ 3, 0, 0, 0, 0, 0, 0, 0, 3},
				{-1, 3, 0, 0, 0, 0, 0, 3,-1},
				{-1,-1, 3, 0, 0, 0, 3,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1}
			},
			{  // Floor 4
				{-1,-1,-1,-1,-1,-1,-1,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1},
				{-1, 3, 3, 3, 3, 3, 3, 3,-1},
				{-1,-1, 3, 3, 3, 3, 3,-1,-1},
				{-1,-1,-1, 3, 3, 3,-1,-1,-1},
				{-1,-1,-1,-1,-1,-1,-1,-1,-1}
			}
		};

	@Override
	public void populate(World world, Random random, Chunk source)
	{
		int place = random.nextInt(100);
		
		if(place==37)
		{
			int x = random.nextInt(16) + source.getX() * 16;
			int z = random.nextInt(16) + source.getZ() * 16;
			int y = 9 + random.nextInt(15);
			
			int[][][] garden;
			switch(random.nextInt(4))
			{
			case 0:
				garden = this.garden_grey; // Mushroom garden
				break;
			case 1:
			case 2:
			case 3:
			default:
				garden = this.garden_green; // Green garden
				break;
			}
			
			for(int i=0;i<2;i++)
			{

				for(int yy=0;yy<5;yy++)
				{
					for(int zz=0;zz<9;zz++)
					{
						for(int xx=0;xx<9;xx++)
						{
							int type = garden[yy][zz][xx];
							if(type!=-1)
							{
								Block repl = world.getBlockAt(x+xx - 5, y + yy - 2, z + zz - 5);
								repl.setTypeId(type);
								if(type==31)
								{
									repl.setData((byte)1);
								}
							}
						}
					}
				}
			}
		}
	}

}
